==27388== Memcheck, a memory error detector
==27388== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==27388== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==27388== Command: /rhome/b/bkarovic1/workspace/TP/T1/Z4/.runme
==27388== Parent PID: 27368
==27388== 
==27388== 
==27388== Process terminating with default action of signal 15 (SIGTERM)
==27388==    at 0x5875081: read (read.c:27)
==27388==    by 0x50F1E06: std::__basic_file<char>::xsgetn(char*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==27388==    by 0x512CB9F: std::basic_filebuf<char, std::char_traits<char> >::underflow() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==27388==    by 0x5139739: std::istream::sentry::sentry(std::istream&, bool) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==27388==    by 0x513BCCD: std::istream& std::istream::_M_extract<double>(double&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==27388==    by 0x108C77: main (main.cpp:15)
==27388== 
==27388== HEAP SUMMARY:
==27388==     in use at exit: 122,880 bytes in 6 blocks
==27388==   total heap usage: 8 allocs, 2 frees, 195,641 bytes allocated
==27388== 
==27388== LEAK SUMMARY:
==27388==    definitely lost: 0 bytes in 0 blocks
==27388==    indirectly lost: 0 bytes in 0 blocks
==27388==      possibly lost: 0 bytes in 0 blocks
==27388==    still reachable: 122,880 bytes in 6 blocks
==27388==         suppressed: 0 bytes in 0 blocks
==27388== Reachable blocks (those to which a pointer was found) are not shown.
==27388== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==27388== 
==27388== For counts of detected and suppressed errors, rerun with: -v
==27388== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
