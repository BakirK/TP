==23393== Memcheck, a memory error detector
==23393== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==23393== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==23393== Command: /rhome/b/bkarovic1/workspace/TP/T8/Z5/.runme
==23393== Parent PID: 23373
==23393== 
==23393== 
==23393== Process terminating with default action of signal 1 (SIGHUP)
==23393==    at 0x54D7152: write (write.c:27)
==23393==    by 0x54521BC: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1203)
==23393==    by 0x5452B2E: new_do_write (fileops.c:457)
==23393==    by 0x5452B2E: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1277)
==23393==    by 0x5446976: fwrite (iofwrite.c:39)
==23393==    by 0x5151E93: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==23393==    by 0x5152206: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==23393==    by 0x108AA6: UnesiVektor(std::tuple<double, double, double>&) (main.cpp:11)
==23393==    by 0x108EBD: main (main.cpp:49)
==23393== 
==23393== HEAP SUMMARY:
==23393==     in use at exit: 0 bytes in 0 blocks
==23393==   total heap usage: 2 allocs, 2 frees, 73,728 bytes allocated
==23393== 
==23393== All heap blocks were freed -- no leaks are possible
==23393== 
==23393== For counts of detected and suppressed errors, rerun with: -v
==23393== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
